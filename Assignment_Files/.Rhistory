vect=[]
an=g[ 3   , "State"]
an
g[2,3]
g[1, c(1,3)]
l=g[ , State=="TX"]
l=g[ , State="TX"]
l=g[ , "State"=="TX"]
View(l)
p=g[, c("hospital", "State"=="TX"]
p=g[, c("hospital", "State"=="TX")]
p=g[, c(hospital, "State"=="TX")]
p=g[, c("hospital" , "State"=="TX")]
p=g[, c(1 , "State"=="TX")]
class(g)
class(p)
p=subset(g, select=("hospital", "State"), subset=="TX")
p=subset(g, select=("hospital", "State"), subset=("State"=="TX")
N=tapply(g,State, g[which.min(State), 2]
N=tapply(g,State, g[which.min(State), 2])
N=tapply(g,State, g[which.min(subset(g, select=State), 2])
N=tapply(g,State, g[which.min(subset(g, select=State)), 2])
N=tapply(g,State, g[1, c(1,3)])
N=tapply(g,State, x=g[1, c(1,3)])
N=tapply(g,"State", x=g[1, c(1,3)])
fun= function(x) {
x[1, c(1,3)]}
fun(g)
N=tapply(g,"State", fun)
N=tapply(g, State, fun)
N=tapply(g[2] , g[3], mean)
N=tapply(g$pneumonia , g$State, mean)
N
N=as.dataframe(N)
N=as.data.frame(N)
View(N)
dfrm=data.frame(colname1=hospital, colname2=state)
dfrm=data.frame(colname1="hospital", colname2="state")
View(dfrm)
g[1, c(1,3)]
class(g[1, c(1,3)])
l=g[1, c("hospital", "State"=="TX")])
l=g[1, c("hospital", "State"=="TX")]
g[1, c(1,3)]
subset(g, select=c(hospital, State), subset=(State="TX"))
q=subset(g, select=c(hospital, State))
View(q)
q=subset(g, select=c(hospital, State=="TX"))
View(q)
q=subset(g, select=c(hospital, State))
q=subset(g, select=c(hospital, State), subset=(State="TX"))
q=subset(g, select=c(hospital, State), subset=(State=="TX"))
dfrm=data.frame(colname1="hospital", colname2="state")
View(q)
L=q[1, c(1,3)]
L=q[1, c(1,2)]
df=rbind(dfrm,L)
View(L)
dfrm=data.frame(colname1="hospital", colname2="State")
df=rbind(dfrm,L)
View(dfrm)
g[0, 2]
g[1, 2]
dfrm=g[0, c(1,3)]
df=rbind(dfrm, L)
View(df)
for (state in states){
l=subset(g, select=c(hospital, State), subset=(State==state))
L=l[1, c(1,2)]
df=rbind(dfrm, L)}
view(df)
View(df)
dfrm=g[0, c(1,3)]
for (state in states){
l=subset(g, select=c(hospital, State), subset=(State==state))
L=l[1, c(1,2)]
dfrm=rbind(dfrm, L)}
View(dfrm)
rankall <- function(outcome, num = "best") {
outcomecsv<- read.csv("outcome-of-care-measures.csv", colClasses="character")
colnames(outcomecsv)[11] <- "heart attack"
colnames(outcomecsv)[17] <- "heart failure"
colnames(outcomecsv)[23] <- "pneumonia"
colnames(outcomecsv)[2] <- "hospital"
state <- as.character(state)
outcome<-as.character(outcome)
v=c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% v) stop("invalid outcome")
#e<-subset(outcomecsv, State==state)
f=outcomecsv[, c("hospital", outcome, "State")]
f[,2]=as.numeric(f[,2])
f=f[complete.cases(f), ]
g=f[order(f[3], f[2], f[1]), ]
#na.omit(f)
states =g[, 3]
states = unique(states)
dfrm=g[0, c(1,3)]
for (state in states){
l=subset(g, select=c(hospital, State), subset=(State==state))
if (num=="best")  num=1
if (num=="worst")  num=nrow(l)
else  num=num
L=l[num, c(1,2)]
dfrm=rbind(dfrm, L)}
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
outcomecsv<- read.csv("outcome-of-care-measures.csv", colClasses="character")
colnames(outcomecsv)[11] <- "heart attack"
colnames(outcomecsv)[17] <- "heart failure"
colnames(outcomecsv)[23] <- "pneumonia"
colnames(outcomecsv)[2] <- "hospital"
state <- as.character(state)
outcome<-as.character(outcome)
v=c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% v) stop("invalid outcome")
#e<-subset(outcomecsv, State==state)
f=outcomecsv[, c("hospital", outcome, "State")]
f[,2]=as.numeric(f[,2])
f=f[complete.cases(f), ]
g=f[order(f[3], f[2], f[1]), ]
#na.omit(f)
states =g[, 3]
states = unique(states)
dfrm=g[0, c(1,3)]
for (state in states){
l=subset(g, select=c(hospital, State), subset=(State==state))
#         if (num=="best")  num=1
#
#         if (num=="worst")  num=nrow(l)
#
#         else  num=num
L=l[num, c(1,2)]
dfrm=rbind(dfrm, L)}
}
rankall("heart attack", 20)
rankall <- function(outcome, num = "best") {
outcomecsv<- read.csv("outcome-of-care-measures.csv", colClasses="character")
colnames(outcomecsv)[11] <- "heart attack"
colnames(outcomecsv)[17] <- "heart failure"
colnames(outcomecsv)[23] <- "pneumonia"
colnames(outcomecsv)[2] <- "hospital"
state <- as.character(state)
outcome<-as.character(outcome)
v=c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% v) stop("invalid outcome")
#e<-subset(outcomecsv, State==state)
f=outcomecsv[, c("hospital", outcome, "State")]
f[,2]=as.numeric(f[,2])
f=f[complete.cases(f), ]
g=f[order(f[3], f[2], f[1]), ]
#na.omit(f)
states =g[, 3]
states = unique(states)
dfrm=g[0, c(1,3)]
for (state in states){
l=subset(g, select=c(hospital, State), subset=(State==state))
#         if (num=="best")  num=1
#
#         if (num=="worst")  num=nrow(l)
#
#         else  num=num
L=l[num, c(1,2)]
dfrm=rbind(dfrm, L)}
dfrm
}
rankall("heart attack", 20)
rankall <- function(outcome, num = "best") {
outcomecsv<- read.csv("outcome-of-care-measures.csv", colClasses="character")
colnames(outcomecsv)[11] <- "heart attack"
colnames(outcomecsv)[17] <- "heart failure"
colnames(outcomecsv)[23] <- "pneumonia"
colnames(outcomecsv)[2] <- "hospital"
state <- as.character(state)
outcome<-as.character(outcome)
v=c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% v) stop("invalid outcome")
#e<-subset(outcomecsv, State==state)
f=outcomecsv[, c("hospital", outcome, "State")]
f[,2]=as.numeric(f[,2])
#f=f[complete.cases(f), ]
g=f[order(f[3], f[2], f[1]), ]
#na.omit(f)
states =g[, 3]
states = unique(states)
dfrm=g[0, c(1,3)]
for (state in states){
l=subset(g, select=c(hospital, State), subset=(State==state))
#         if (num=="best")  num=1
#
#         if (num=="worst")  num=nrow(l)
#
#         else  num=num
L=l[num, c(1,2)]
dfrm=rbind(dfrm, L)}
dfrm
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
outcomecsv<- read.csv("outcome-of-care-measures.csv", colClasses="character")
colnames(outcomecsv)[11] <- "heart attack"
colnames(outcomecsv)[17] <- "heart failure"
colnames(outcomecsv)[23] <- "pneumonia"
colnames(outcomecsv)[2] <- "hospital"
state <- as.character(state)
outcome<-as.character(outcome)
v=c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% v) stop("invalid outcome")
#e<-subset(outcomecsv, State==state)
f=outcomecsv[, c("hospital", outcome, "State")]
f[,2]=as.numeric(f[,2])
#f=f[complete.cases(f), ]
g=f[order(f[3], f[2], f[1]), ]
#na.omit(f)
states =g[, 3]
states = unique(states)
dfrm=g[0, c(1,3)]
for (state in states){
l=subset(g, select=c(hospital, State), subset=(State==state))
if (num=="best")  L=l[1, c(1,2)]
if (num=="worst")  L=l[nrow(l), c(1,2)]
else  L=l[num, c(1,2)]
dfrm=rbind(dfrm, L)}
dfrm
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
nrow(g)
outcomecsv<- read.csv("outcome-of-care-measures.csv", colClasses="character")
colnames(outcomecsv)[11] <- "heart attack"
colnames(outcomecsv)[17] <- "heart failure"
colnames(outcomecsv)[23] <- "pneumonia"
colnames(outcomecsv)[2] <- "hospital"
state <- as.character(state)
outcome<-as.character(outcome)
v=c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% v) stop("invalid outcome")
#e<-subset(outcomecsv, State==state)
f=outcomecsv[, c("hospital", outcome, "State")]
f[,2]=as.numeric(f[,2])
f=f[complete.cases(f), ]
rankall <- function(outcome, num = "best") {
outcomecsv<- read.csv("outcome-of-care-measures.csv", colClasses="character")
colnames(outcomecsv)[11] <- "heart attack"
colnames(outcomecsv)[17] <- "heart failure"
colnames(outcomecsv)[23] <- "pneumonia"
colnames(outcomecsv)[2] <- "hospital"
state <- as.character(state)
outcome<-as.character(outcome)
v=c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% v) stop("invalid outcome")
#e<-subset(outcomecsv, State==state)
f=outcomecsv[, c("hospital", outcome, "State")]
f[,2]=as.numeric(f[,2])
f=f[complete.cases(f), ]
g=f[order(f[3], f[2], f[1]), ]
#na.omit(f)
states =g[, 3]
states = unique(states)
dfrm=g[0, c(1,3)]
for (state in states){
l=subset(g, select=c(hospital, State), subset=(State==state))
if (num=="best")  L=l[1, c(1,2)]
if (num=="worst")  L=l[nrow(l), c(1,2)]
else  L=l[num, c(1,2)]
dfrm=rbind(dfrm, L)}
dfrm
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
rankall("heart failure")
rankall("heart failure", num="best")
rankall <- function(outcome, num = "best") {
outcomecsv<- read.csv("outcome-of-care-measures.csv", colClasses="character")
colnames(outcomecsv)[11] <- "heart attack"
colnames(outcomecsv)[17] <- "heart failure"
colnames(outcomecsv)[23] <- "pneumonia"
colnames(outcomecsv)[2] <- "hospital"
state <- as.character(state)
outcome<-as.character(outcome)
v=c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% v) stop("invalid outcome")
#e<-subset(outcomecsv, State==state)
f=outcomecsv[, c("hospital", outcome, "State")]
f[,2]=as.numeric(f[,2])
f=f[complete.cases(f), ]
g=f[order(f[3], f[2], f[1]), ]
#na.omit(f)
states =g[, 3]
states = unique(states)
dfrm = data.frame("hospital"=character(), "state"=character())
for (state in states){
l=subset(g, select=c(hospital, State), subset=(State==state))
if (num=="best")  L=l[1, c(1,2)]
if (num=="worst")  L=l[nrow(l), c(1,2)]
else  L=l[num, c(1,2)]
dfrm=rbind(dfrm, L)}
dfrm
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit
submit()
rankall <- function(outcome, num = "best") {
outcomecsv<- read.csv("outcome-of-care-measures.csv", colClasses="character")
colnames(outcomecsv)[11] <- "heart attack"
colnames(outcomecsv)[17] <- "heart failure"
colnames(outcomecsv)[23] <- "pneumonia"
colnames(outcomecsv)[2] <- "hospital"
state <- as.character(state)
outcome<-as.character(outcome)
v=c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% v) stop("invalid outcome")
#e<-subset(outcomecsv, State==state)
f=outcomecsv[, c("hospital", outcome, "State")]
f[,2]=as.numeric(f[,2])
f=f[complete.cases(f), ]
g=f[order(f[3], f[2], f[1]), ]
#na.omit(f)
states =g[, 3]
states = unique(states)
dfrm = data.frame("hospital"=character(), "state"=character())
for (state in states){
l=subset(g, select=c(hospital, State), subset=(State==state))
if (num=="best")  L=l[1, c(1,2)]
if (num=="worst")  L=l[nrow(l), c(1,2)]
else  L=l[num, c(1,2)]
dfrm=rbind(dfrm, L)}
dfrm = data.frame("hospital"=character(), "state"=character())
dfrm
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
outcomecsv<- read.csv("outcome-of-care-measures.csv", colClasses="character")
colnames(outcomecsv)[11] <- "heart attack"
colnames(outcomecsv)[17] <- "heart failure"
colnames(outcomecsv)[23] <- "pneumonia"
colnames(outcomecsv)[2] <- "hospital"
state <- as.character(state)
outcome<-as.character(outcome)
v=c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% v) stop("invalid outcome")
#e<-subset(outcomecsv, State==state)
f=outcomecsv[, c("hospital", outcome, "State")]
f[,2]=as.numeric(f[,2])
f=f[complete.cases(f), ]
g=f[order(f[3], f[2], f[1]), ]
#na.omit(f)
states =g[, 3]
states = unique(states)
dfrm = data.frame("hospital"=character(), "state"=character())
for (state in states){
l=subset(g, select=c(hospital, State), subset=(State==state))
if (num=="best")  L=l[1, c(1,2)]
if (num=="worst")  L=l[nrow(l), c(1,2)]
else  L=l[num, c(1,2)]
dfrm=rbind(L, dfrm)}
dfrm
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
outcomecsv<- read.csv("outcome-of-care-measures.csv", colClasses="character")
colnames(outcomecsv)[11] <- "heart attack"
colnames(outcomecsv)[17] <- "heart failure"
colnames(outcomecsv)[23] <- "pneumonia"
colnames(outcomecsv)[2] <- "hospital"
colnames(outcomecsv)[5] <- "state"
state <- as.character(state)
outcome<-as.character(outcome)
v=c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% v) stop("invalid outcome")
#e<-subset(outcomecsv, State==state)
f=outcomecsv[, c("hospital", outcome, "State")]
f[,2]=as.numeric(f[,2])
f=f[complete.cases(f), ]
g=f[order(f[3], f[2], f[1]), ]
#na.omit(f)
states =g[, 3]
states = unique(states)
dfrm = data.frame("hospital"=character(), "state"=character())
for (state in states){
l=subset(g, select=c(hospital, State), subset=(State==state))
if (num=="best")  L=l[1, c(1,2)]
if (num=="worst")  L=l[nrow(l), c(1,2)]
else  L=l[num, c(1,2)]
dfrm=rbind(L, dfrm)}
dfrm
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
outcomecsv<- read.csv("outcome-of-care-measures.csv", colClasses="character")
colnames(outcomecsv)[11] <- "heart attack"
colnames(outcomecsv)[17] <- "heart failure"
colnames(outcomecsv)[23] <- "pneumonia"
colnames(outcomecsv)[2] <- "hospital"
colnames(outcomecsv)[5] <- "state"
state <- as.character(state)
outcome<-as.character(outcome)
v=c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% v) stop("invalid outcome")
#e<-subset(outcomecsv, state==state)
f=outcomecsv[, c("hospital", outcome, "state")]
f[,2]=as.numeric(f[,2])
f=f[complete.cases(f), ]
g=f[order(f[3], f[2], f[1]), ]
#na.omit(f)
states =g[, 3]
states = unique(states)
dfrm = data.frame("hospital"=character(), "state"=character())
for (state in states){
l=subset(g, select=c(hospital, State), subset=(state==state))
if (num=="best")  L=l[1, c(1,2)]
if (num=="worst")  L=l[nrow(l), c(1,2)]
else  L=l[num, c(1,2)]
dfrm=rbind(L, dfrm)}
dfrm
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
outcomecsv<- read.csv("outcome-of-care-measures.csv", colClasses="character")
colnames(outcomecsv)[11] <- "heart attack"
colnames(outcomecsv)[17] <- "heart failure"
colnames(outcomecsv)[23] <- "pneumonia"
colnames(outcomecsv)[2] <- "hospital"
state <- as.character(state)
outcome<-as.character(outcome)
v=c("heart attack", "heart failure", "pneumonia")
if (!outcome %in% v) stop("invalid outcome")
#e<-subset(outcomecsv, State==state)
f=outcomecsv[, c("hospital", outcome, "State")]
f[,2]=as.numeric(f[,2])
f=f[complete.cases(f), ]
g=f[order(f[3], f[2], f[1]), ]
#na.omit(f)
states =g[, 3]
states = unique(states)
dfrm = data.frame("hospital"=character(), "state"=character())
for (state in states){
l=subset(g, select=c(hospital, State), subset=(State==state))
if (num=="best")  L=l[1, c(1,2)]
if (num=="worst")  L=l[nrow(l), c(1,2)]
else  L=l[num, c(1,2)]
dfrm=rbind(L, dfrm)}
colnames(dfrm)=c("hospital", "state")
dfrm
}
head(rankall("heart attack", 20), 10)
submit()
pnorm(9.51, mean=10, sd=4.65)
pnorm(9.51, mean=10, sd=4.65, lower.tail=F)
pnorm(10.51, mean=10, sd=4.65, lower.tail=F)
(0.09*0.9) + (0.91*0.02)
(0.09*0.9)
0.081/0.0992
8/100
11/100
12/15
qnorm(0.8)
dnorm(0.8)
dnorm(0.9)
pnorm(0.9)
qnorm(0.9)
qnorm(0.1)
pnorm(0.1)
dnorm(0.1)
qnorm(0.05)
qnorm(0.1)
((1.28*18)/4)^2
pbinom
pbinom(1, 1000, 0.00034)
dbinom(1, 1000, 0.00034)
dbinom(1:1000, 1000, 0.00034)
sum(dbinom(1:1000, 1000, 0.00034))
library(nycflights13)
load(dplyr)
csv=read.csv("outcome-of-care-measures.csv", colClasses="character")
head(csv)
summary(csv)
dim(csv)
install.packages("dplyr")
load(dplyr)
dim(hflights)
libarary(hflights)
library(hflights)
dim(hflights)
head(hflights)
hflights_df <- tbl_df(hflights)
hflights_df
library("dplyr", lib.loc="C:/Users/Alex/Documents/R/win-library/3.0")
hflights_df <- tbl_df(hflights)
hflights_df
filter(hflights_df, Month == 1, DayofMonth == 1)
arrange(hflights_df, DayofMonth, Month, Year)
planes <- group_by(hflights_df, TailNum)
delay <- summarise(planes,
count = n(),
dist = mean(Distance, na.rm = TRUE),
delay = mean(ArrDelay, na.rm = TRUE))
delay <- filter(delay, count > 20, dist < 2000)
ggplot(delay, aes(dist, delay)) +
geom_point(aes(size = count), alpha = 1/2) +
geom_smooth() +
scale_size_area()
library("ggplot2", lib.loc="C:/Users/Alex/Documents/R/win-library/3.0")
ggplot(delay, aes(dist, delay)) +
geom_point(aes(size = count), alpha = 1/2) +
geom_smooth() +
scale_size_area()
